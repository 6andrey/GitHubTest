name: PR Code Valiadation - Pool

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  install-sfdx:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Salesforce CLI
        run: |
            wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
            mkdir sfdx-cli
            tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
            ./sfdx-cli/install  

  ci1:
    needs: [install-sfdx]
    runs-on: ubuntu-latest
    
    steps:
      - name: Get Deployment Jobs Count - Sandbox CI1
        id: step_count_ci1
        run: |
            echo "${{ secrets.CI1_SFDX_AUTH_URL }}" > ./authfile_ci1
            sfdx auth:sfdxurl:store -f ./authfile_ci1 -a ci1
            ci1_result=$(sfdx force:data:soql:query --query "SELECT Count(Id) FROM DeployRequest Where Status In ('InProgress','Pending')" --targetusername ci1 --usetoolingapi)
            ci1_count=$(echo "$ci1_result" | awk 'NR==3{print $1}')
            echo "::set-output name=ci1_count::$ci1_count"
            echo "*********************"
            echo "ci1_result"
            echo "$ci1_result"
            echo "*********************"
            echo "ci1_count:"
            echo "$ci1_count"
            echo "*********************"

  ci2:
    needs: [install-sfdx]
    runs-on: ubuntu-latest
              
    steps:            
      - name: Get Deployment Jobs Count - Sandbox CI2
        id: step_count_ci2
        run: |
            echo "${{ secrets.CI2_SFDX_AUTH_URL }}" > ./authfile_ci2
            sfdx auth:sfdxurl:store -f ./authfile_ci2 -a ci2
            ci2_result=$(sfdx force:data:soql:query --query "SELECT Count(Id) FROM DeployRequest Where Status In ('InProgress','Pending')" --targetusername ci2 --usetoolingapi)
            ci2_count=$(echo "$ci2_result" | awk 'NR==3{print $1}')
            echo "::set-output name=ci2_count::$ci2_count"
            echo "*********************"
            echo "ci2_result"
            echo "$ci2_result"
            echo "*********************"
            echo "ci2_count:"
            echo "$ci2_count"
            echo "*********************"

  validate-code:
    needs: [ci1, ci2]
    runs-on: ubuntu-latest
              
    steps:            
      - name: Find Less Busy Sandbox
        id: find_minimum
        run: |
          ci1_count="${{ needs.ci1.outputs.ci1_count }}"
          ci2_count="${{ needs.ci2.outputs.ci2_count }}"

          if ["$ci1_count" -lt "$ci2_count"]; then
            echo "::set-output name=less_busy_org::ci1"
          else
            echo "::set-output name=less_busy_org::ci2"
          fi

      - name: Validate Code In Less Busy Sandbox
        id: validate_code
        run: |
          less_busy_sandbox="${{ steps.find_minimum.outputs.less_busy_org }}"
          echo "$less_busy_sandbox"

      # Continue with other workflow steps...
